https://github.com/sandipmohapatra/Batch37
----------------------------------------------------------------------

1)Java is a object Oriented programing language.
2)It is simpler than c and c++ as we don't have pointer concept,multiple inheritance,operator overloading.
3)Java support multi-threading or multi-tasking.
4)we can develop webapplication,network application,standalone application, and mobile application.
5)In java we have constructor but no destructor .There is automatic garbage clearance.
6)In java we have interface which support multiple inheritance.
7)we have 4 access specifier in java which makes java more secure language.
-------------------------------------------------
i)private :- if we declare variables and methods as private we can access it with in the class only.
ii)public:- if we declare variables and methods as public we can access it with in the class ,outside the class and also outside the package.
iii)protected:-if we declare variables and methods as protected we can access it with in the class and in the child class also.
iv)default:-if we declare variables and methods as default we can access it with in the class ,outside the class but not outside the package.
------------------------------------------------------------------------------------
Data type:-
------------------
primative datatypes
-----------------------------
1)byte - 1 byte
2)short - 2 bytes
3)int    - 4 bytes
4)long - 8 bytes
5)char - 2 bytes
6)boolean - 1 bit
7)float - 4 bytes
8)double - 8 bytes
-------------------------------------------------
derived datatypes
-----------------------------
1)String :- it is a group of characters (example :-a is a character ,apple is a string)
2)array :- array of string ,array of int.
3)class
-----------------------------------------------------------------------------
operator:-
-----------------
we have 3 types of operators
1)unary :- i++,++i,i--,--i
2)binary :-
i)Arithmatic operator :- +,-,*,/,%(modulus/reminder)
ii)comparative operator :- <,>,<=,>=,==,!=
iii)assignment :- =
iv)bitwise operator :-<< ,>>
3)Ternary operator :- ?,:
----------------------------------------------------------------------------------
class :- a class is a collection of data members and member functions.
A class is a blue print /framework of an object.
we can access the data members and member function of a class by using object.
An object is a reference pointer to a class.
----------------------------------
example-1
--------------
package com.sandip;

public class First
{
public static void main(String[] args) 
{
	byte a=10;
	short b=20;
	int c=30;
	long d=40;
	char e='a';
	float f=45.34f;
	double g=45.78;
	String h="apple";
	System.out.println("the value of a is "+a);
	System.out.println("the value of b is "+b);
	System.out.println("the value of c is "+c);
	System.out.println("the value of d is "+d+"the value of e is"+e);
	System.out.println("the value of f is "+f+"the value of g is"+g);
	System.out.println("the value of h is "+h);
}
}
---------------------------------------------------------------------------------
example-2
-------------------
package com.sandip;
import java.util.*;
public class Second 
{
public static void main(String[] args) 
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter 2 nos");
	int a=ob.nextInt();
	int b=ob.nextInt();
	int c=a+b;
	System.out.println("the sum is "+c);
}
}
--------------------------------------------------------------------
wap to enter 5 nos and find the sum and average.
-------------------------------------------------------------------------
wap to create a class employee .enter employee no,name,address and display it.
----------------------------------------------------------------------------------
example-3
-------------------------
package com.sandip;
import java.util.*;
public class Employee 
{
int empno;
String name,address;
void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter empno,name,address");
	empno=ob.nextInt();
	name=ob.next();
	address=ob.next();
}
void display()
{
	System.out.println("the empno is "+empno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
public static void main(String[] args) {
	Employee ob1=new Employee();
	ob1.input();
	ob1.display();
}
}
------------------------------------------------------------------------------
example-4
----------------
package com.sandip;
import java.util.*;
public class Student 
{
	int rollno;
	String name,address;
	float phy,chem,bio,maths,total,avg,grade;
	void input()
	{
		Scanner ob=new Scanner(System.in);
		System.out.println("enter rollno,name,address,phy,chem,bio,maths marks");
		rollno=ob.nextInt();
		name=ob.next();
		address=ob.next();
		phy=ob.nextFloat();
		chem=ob.nextFloat();
		bio=ob.nextFloat();
		maths=ob.nextFloat();
		total=phy+chem+bio+maths;
		avg=total/4;
			}
	void display()
	{
		System.out.println("the rollno is"+rollno+"The name is"+name);
		System.out.println("the address is"+address);
		System.out.println("the phy marks is"+phy+"the chem marks is"+chem);
		System.out.println("the bio marks is"+bio+"The maths marks is"+maths);
		System.out.println("the total is"+total);
		System.out.println("the average is"+avg);
		if(avg>=70)
			System.out.println("first division");
		else if(avg>=60)
			System.out.println("Second division");
		else if(avg>=50)
			System.out.println("Third division");
		else
			System.out.println("fail");
	}
	public static void main(String[] args) {
		Student ob=new Student();
		ob.input();
		ob.display();
	}

}
------------------------------------------------------------------------------
wap to enter bank details and display it.
accno,name,balance,withdraw,deposite and display the available balance
--------------------------------------------------------------------------------------

example-5
-------------------
package com.sandip;
import java.util.*;
public class Bank
{
int accno;
String name;
float bal;
void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter accno,name,Balance");
	accno=ob.nextInt();
	name=ob.next();
	bal=ob.nextFloat();
}
float withdraw()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter the withdraw amount");
	float wd=ob.nextFloat();
	if(bal >= wd+1000.00)//(5000 >=3500+1000)
		bal=bal-wd;
	else
		System.out.println("Balance is low");
	return bal;
}
float deposite()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter the deposite amount");
	float dip=ob.nextFloat();
	bal=bal+dip;
	return bal;
}
public static void main(String[] args) {
	Bank ob=new Bank();
	ob.input();
	Scanner ob1=new Scanner(System.in);
	System.out.println("enter 1 for deposite 2 for withdraw");
	int choice=ob1.nextInt();
	if(choice==1)
		System.out.println("the total balance is "+ob.deposite());
	else
		System.out.println("the total balance is "+ob.withdraw());
}
}

----------------------------------------------------------------
constructor :- A constructor is a function which has the same name as that of the class name.
It doesnot return any value nor it has any return type.
There are 2 types of constructor.
1)default constructor :- It is without any parameter.
2)parameterized constructor:- It is with parameter.
-------------------------------------------
example-6
--------------------
package com.sandip;

public class ConstructorDemo 
{
int rollno;//intance variable can be accessed through out the class
String name,address;
ConstructorDemo()
{
	System.out.println("This is a default constructor");
}
//local variable can be accessed within the method()
public ConstructorDemo(int rollno, String name, String address) 
{
	this.rollno = rollno;
	this.name = name;
	this.address = address;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
public static void main(String[] args)
{
	ConstructorDemo ob=new ConstructorDemo();
	ConstructorDemo ob1=new ConstructorDemo(101,"sandip","Bangalore");
	ConstructorDemo ob2=new ConstructorDemo(102,"Kiran","Bangalore");
	ob1.display();ob2.display();
}
}
--------------------------------------------------------------------------------------
Difference between function and constructor is function can have any name other than the class name.
It returns a value.If we use more than one function with same name but with different data types the parameters and return type it is known as function overloading.
---------------------------------------------------------------------------------------------------
example-7
-------------------
package com.sandip;

public class ConstructorDemo 
{
int rollno;//intance variable can be accessed through out the class
String name,address;
ConstructorDemo()
{
	System.out.println("This is a default constructor");
}
//local variable can be accessed within the method()
public ConstructorDemo(int rollno, String name, String address) 
{
	this.rollno = rollno;
	this.name = name;
	this.address = address;
}
//function can have any name and it returns a value
int sum(int a,int b)
{
	return a+b;
}

int sub(int a,int b)
{
	return a-b;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
public static void main(String[] args)
{
	ConstructorDemo ob=new ConstructorDemo();
	ConstructorDemo ob1=new ConstructorDemo(101,"sandip","Bangalore");
	ConstructorDemo ob2=new ConstructorDemo(102,"Kiran","Bangalore");
	ob1.display();ob2.display();
	System.out.println("the sum is "+ob.sum(8, 9));
	System.out.println("the sum is "+ob1.sum(18,19));
	System.out.println("the sub is "+ob.sub(8, 9));
	System.out.println("the sub is "+ob1.sub(18,19));
	
}
}
------------------------------------------------------------------------------- 
function overloading
-----------------------------------------
example-8
-----------------
package com.sandip;

public class ConstructorDemo 
{
int rollno;//intance variable can be accessed through out the class
String name,address;
ConstructorDemo()
{
	System.out.println("This is a default constructor");
}
//local variable can be accessed within the method()
public ConstructorDemo(int rollno, String name, String address) 
{
	this.rollno = rollno;
	this.name = name;
	this.address = address;
}
//function can have any name and it returns a value
int sum(int a,int b)
{
	return a+b;
}
float sum(float a,float b)
{
	return a+b;
}
int sub(int a,int b)
{
	return a-b;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
public static void main(String[] args)
{
	ConstructorDemo ob=new ConstructorDemo();
	ConstructorDemo ob1=new ConstructorDemo(101,"sandip","Bangalore");
	ConstructorDemo ob2=new ConstructorDemo(102,"Kiran","Bangalore");
	ob1.display();ob2.display();
	System.out.println("the sum is "+ob.sum(8, 9));
	System.out.println("the sum is "+ob1.sum(18,19));
	System.out.println("the sub is "+ob.sub(8, 9));
	System.out.println("the sub is "+ob1.sub(18,19));
	System.out.println("the sum is "+ob.sum(8.3f, 9.3f));
	System.out.println("the sum is "+ob1.sum(18.5f,19.3f));
	
}
}
-------------------------------------------------------------------------------------------------
wap to create a parameterized constructor .pass the values dynamically at the runtime and display it.
employee class :- empno,name,designation,salary.
-------------------------------------------------------------------------------------------------
example-9
------------------
package com.sandip;

public class ConstructorDemo 
{
int rollno;//intance variable can be accessed through out the class
String name,address;
ConstructorDemo()
{
	System.out.println("This is a default constructor");
}
//local variable can be accessed within the method()


public ConstructorDemo(int rollno, String name, String address) 
{
	this.rollno = rollno;
	this.name = name;
	this.address = address;
}

public ConstructorDemo(String name, String address,int rollno) 
{
	this.rollno = rollno;
	this.name = name;
	this.address = address;
}
//function can have any name and it returns a value
int sum(int a,int b)
{
	return a+b;
}

int sum(int a,int b,int c)
{
	return a+b+c;
}

float sum(float a,float b)
{
	return a+b;
}
int sub(int a,int b)
{
	return a-b;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
public static void main(String[] args)
{
	ConstructorDemo ob=new ConstructorDemo();
	ConstructorDemo ob1=new ConstructorDemo(101,"sandip","Bangalore");
	ConstructorDemo ob2=new ConstructorDemo(102,"Kiran","Bangalore");
	ConstructorDemo ob3=new ConstructorDemo("Kiran","Bangalore",103);
	ob1.display();ob2.display();ob3.display();
	System.out.println("the sum is "+ob.sum(8, 9));
	System.out.println("the sum is "+ob1.sum(18,19));
	System.out.println("the sub is "+ob.sub(8, 9));
	System.out.println("the sub is "+ob.sum(8, 9,7));
	System.out.println("the sub is "+ob1.sub(18,19));
	System.out.println("the sum is "+ob.sum(8.3f, 9.3f));
	System.out.println("the sum is "+ob1.sum(18.5f,19.3f));
	
}
}
----------------------------------------------------------------------------------------------------
example-10
-------------------
package com.sandip;

public class GetSet1 
{
int rollno;
String name,address;
public int getRollno() {
	return rollno;
}
public void setRollno(int rollno) {
	this.rollno = rollno;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getAddress() {
	return address;
}
public void setAddress(String address) {
	this.address = address;
}
}
--------------------------------------------
package com.sandip;

public class GetSet2 
{
public static void main(String[] args) {
	GetSet1 ob=new GetSet1();
	ob.setRollno(10);
	ob.setName("sandip");
	ob.setAddress("Bangalore");
	System.out.println("the rollno is "+ob.getRollno());
	System.out.println("the name is "+ob.getName());
	System.out.println("the address is "+ob.getAddress());
}
}
----------------------------------------------------------------------------------------------------




















